// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NoteeBackend.Database;

#nullable disable

namespace NoteeBackend.Migrations
{
    [DbContext(typeof(NoteDbContext))]
    [Migration("20240718174934_Initialization")]
    partial class Initialization
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NoteeBackend.Models.Note", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Events")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Note", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateOnly(2024, 7, 18),
                            Events = "My note\r\nSecond line"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateOnly(2024, 7, 17),
                            Events = "Yesterday note"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
